{
  "openapi": "3.0.3",
  "info": {
    "title": "Tako API",
    "version": "1.0.0",
    "description": "Documentation of API endpoints of Tako"
  },
  "paths": {
    "/api/v1/bust_cache": {
      "get": {
        "operationId": "api_v1_bust_cache_retrieve",
        "tags": ["api"],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/classify/": {
      "post": {
        "operationId": "api_v1_classify_create",
        "tags": ["api"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassifyQuery"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ClassifyQuery"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ClassifyQuery"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/entity_search": {
      "post": {
        "operationId": "api_v1_entity_search_create",
        "tags": ["api"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntitySearchQuery"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EntitySearchQuery"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EntitySearchQuery"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSearchResult"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/entity_search/": {
      "post": {
        "operationId": "api_v1_entity_search_create_2",
        "tags": ["api"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntitySearchQuery"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EntitySearchQuery"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EntitySearchQuery"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSearchResult"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/list_collections/": {
      "get": {
        "operationId": "api_v1_list_collections_retrieve",
        "tags": ["api"],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/preview_link": {
      "get": {
        "operationId": "api_v1_preview_link_retrieve",
        "tags": ["api"],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/preview_link/": {
      "get": {
        "operationId": "api_v1_preview_link_retrieve_2",
        "tags": ["api"],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/render_data": {
      "post": {
        "operationId": "api_v1_render_data_create",
        "tags": ["api"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenderData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RenderData"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RenderData"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/render_data/": {
      "post": {
        "operationId": "api_v1_render_data_create_2",
        "tags": ["api"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenderData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RenderData"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RenderData"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/schema/": {
      "get": {
        "operationId": "api_v1_schema_retrieve",
        "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": ["json", "yaml"]
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string",
              "enum": [
                "af",
                "ar",
                "ar-dz",
                "ast",
                "az",
                "be",
                "bg",
                "bn",
                "br",
                "bs",
                "ca",
                "cs",
                "cy",
                "da",
                "de",
                "dsb",
                "el",
                "en",
                "en-au",
                "en-gb",
                "eo",
                "es",
                "es-ar",
                "es-co",
                "es-mx",
                "es-ni",
                "es-ve",
                "et",
                "eu",
                "fa",
                "fi",
                "fr",
                "fy",
                "ga",
                "gd",
                "gl",
                "he",
                "hi",
                "hr",
                "hsb",
                "hu",
                "hy",
                "ia",
                "id",
                "ig",
                "io",
                "is",
                "it",
                "ja",
                "ka",
                "kab",
                "kk",
                "km",
                "kn",
                "ko",
                "ky",
                "lb",
                "lt",
                "lv",
                "mk",
                "ml",
                "mn",
                "mr",
                "my",
                "nb",
                "ne",
                "nl",
                "nn",
                "os",
                "pa",
                "pl",
                "pt",
                "pt-br",
                "ro",
                "ru",
                "sk",
                "sl",
                "sq",
                "sr",
                "sr-latn",
                "sv",
                "sw",
                "ta",
                "te",
                "tg",
                "th",
                "tk",
                "tr",
                "tt",
                "udm",
                "uk",
                "ur",
                "uz",
                "vi",
                "zh-hans",
                "zh-hant"
              ]
            }
          }
        ],
        "tags": ["api"],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.oai.openapi": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/vnd.oai.openapi+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/search": {
      "post": {
        "operationId": "api_v1_search_create",
        "tags": ["api"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/search/": {
      "post": {
        "operationId": "api_v1_search_create_2",
        "tags": ["api"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/suggest": {
      "post": {
        "operationId": "api_v1_suggest_create",
        "tags": ["beta"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuggestText"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SuggestText"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SuggestText"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSearchResult"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/suggest/": {
      "post": {
        "operationId": "api_v1_suggest_create_2",
        "tags": ["beta"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuggestText"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SuggestText"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SuggestText"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSearchResult"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/user/": {
      "get": {
        "operationId": "api_v1_user_retrieve",
        "tags": ["api"],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/user/theme": {
      "get": {
        "operationId": "api_v1_user_theme_retrieve",
        "tags": ["api"],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      },
      "post": {
        "operationId": "api_v1_user_theme_create",
        "tags": ["api"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/user/theme/": {
      "get": {
        "operationId": "api_v1_user_theme_retrieve_2",
        "tags": ["api"],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      },
      "post": {
        "operationId": "api_v1_user_theme_create_2",
        "tags": ["api"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/auth-token": {
      "post": {
        "operationId": "auth_token_create",
        "tags": ["auth-token"],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth-token/": {
      "post": {
        "operationId": "auth_token_create_2",
        "tags": ["auth-token"],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AggregationTypeEnum": {
        "enum": [
          "monthly-totals",
          "month-over-month",
          "percentage-change-since-start",
          "cumulative-sum",
          "3-month-trailing-average",
          "weekly-totals",
          "year-over-year",
          "quarter-over-quarter"
        ],
        "type": "string",
        "description": "* `monthly-totals` - monthly-totals\n* `month-over-month` - month-over-month\n* `percentage-change-since-start` - percentage-change-since-start\n* `cumulative-sum` - cumulative-sum\n* `3-month-trailing-average` - 3-month-trailing-average\n* `weekly-totals` - weekly-totals\n* `year-over-year` - year-over-year\n* `quarter-over-quarter` - quarter-over-quarter"
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "writeOnly": true
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "token": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": ["password", "token", "username"]
      },
      "ClassifyQuery": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Natural language search query string"
          }
        },
        "required": ["query"]
      },
      "DataRecord": {
        "type": "object",
        "properties": {
          "x": {
            "type": "string",
            "format": "date-time",
            "description": "Time for the data point"
          },
          "y": {
            "type": "number",
            "format": "double",
            "description": "Value for the data point"
          }
        },
        "required": ["x", "y"]
      },
      "DataSeries": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataRecord"
            },
            "description": "Data points for the series"
          },
          "label": {
            "type": "string",
            "description": "Label of the chart"
          },
          "y_units": {
            "type": "string",
            "description": "Units for the y-axis, i.e. USD, Percent, etc."
          },
          "viz_type": {
            "type": "string",
            "default": "line",
            "description": "Type of the chart. One of: line, bar"
          },
          "y_filter": {
            "type": "string",
            "description": "Filter for the y-axis. Supported options are monthly-totals, month-over-month, percentage-change-since-start, cumulative-sum, 3-month-trailing-average, weekly-totals, year-over-year, quarter-over-quarter"
          }
        },
        "required": ["label", "records"]
      },
      "EntitySearchQuery": {
        "type": "object",
        "properties": {
          "collections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of collections to search (if empty, searches all collection)"
          },
          "aggregation_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AggregationTypeEnum"
              }
            ],
            "description": "Aggregation type (ie year-over-year, percentage-change-since-start, etc)\n\n* `monthly-totals` - monthly-totals\n* `month-over-month` - month-over-month\n* `percentage-change-since-start` - percentage-change-since-start\n* `cumulative-sum` - cumulative-sum\n* `3-month-trailing-average` - 3-month-trailing-average\n* `weekly-totals` - weekly-totals\n* `year-over-year` - year-over-year\n* `quarter-over-quarter` - quarter-over-quarter"
          },
          "start_time": {
            "type": "string",
            "format": "date",
            "description": "Start time for visualization result"
          },
          "end_time": {
            "type": "string",
            "format": "date",
            "description": "Start time for visualization result"
          },
          "fast_filter": {
            "type": "boolean",
            "description": "If the query can't be served, returns empty fast"
          },
          "specificity": {
            "type": "integer",
            "description": "Integer between 0 and 100, where 0 is the least specific and 100 is the most specific"
          },
          "save_preview_image": {
            "type": "boolean",
            "description": "Save preview image of chart"
          },
          "dark_mode": {
            "type": "boolean",
            "description": "Save preview image in dark mode"
          },
          "save_svg": {
            "type": "boolean",
            "description": "Save preview image as svg"
          },
          "include_rt_results": {
            "type": "boolean",
            "description": "Include real time results in the response"
          },
          "bias_for_precision": {
            "type": "boolean",
            "description": "Bias for precision by applying an additional filter to results"
          },
          "include_additional_context": {
            "type": "boolean",
            "description": "Include additional context in the chart description including simple trend analysis"
          },
          "include_football_results": {
            "type": "boolean",
            "description": "include football results (while theyre not GA)"
          },
          "queries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Stock entity queries"
          }
        },
        "required": ["queries"]
      },
      "ListSearchResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            },
            "description": "HTML iframe to embed the visualization"
          }
        },
        "required": ["result"]
      },
      "RenderData": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the chart"
          },
          "subtitle": {
            "type": "string",
            "description": "Subtitle of the chart"
          },
          "description": {
            "type": "string",
            "description": "Description of the chart"
          },
          "series": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataSeries"
            },
            "description": "Data for rendering the chart"
          },
          "dark_mode": {
            "type": "boolean",
            "default": false,
            "description": "Render chart in dark mode"
          },
          "quarterize_data": {
            "type": "boolean",
            "default": false,
            "description": "Whether to show data by quarter"
          },
          "save_preview_image": {
            "type": "boolean",
            "default": false,
            "description": "Save preview image of chart"
          }
        },
        "required": ["series", "title"]
      },
      "SearchQuery": {
        "type": "object",
        "properties": {
          "collections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of collections to search (if empty, searches all collection)"
          },
          "aggregation_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AggregationTypeEnum"
              }
            ],
            "description": "Aggregation type (ie year-over-year, percentage-change-since-start, etc)\n\n* `monthly-totals` - monthly-totals\n* `month-over-month` - month-over-month\n* `percentage-change-since-start` - percentage-change-since-start\n* `cumulative-sum` - cumulative-sum\n* `3-month-trailing-average` - 3-month-trailing-average\n* `weekly-totals` - weekly-totals\n* `year-over-year` - year-over-year\n* `quarter-over-quarter` - quarter-over-quarter"
          },
          "start_time": {
            "type": "string",
            "format": "date",
            "description": "Start time for visualization result"
          },
          "end_time": {
            "type": "string",
            "format": "date",
            "description": "Start time for visualization result"
          },
          "fast_filter": {
            "type": "boolean",
            "description": "If the query can't be served, returns empty fast"
          },
          "specificity": {
            "type": "integer",
            "description": "Integer between 0 and 100, where 0 is the least specific and 100 is the most specific"
          },
          "save_preview_image": {
            "type": "boolean",
            "description": "Save preview image of chart"
          },
          "dark_mode": {
            "type": "boolean",
            "description": "Save preview image in dark mode"
          },
          "save_svg": {
            "type": "boolean",
            "description": "Save preview image as svg"
          },
          "include_rt_results": {
            "type": "boolean",
            "description": "Include real time results in the response"
          },
          "bias_for_precision": {
            "type": "boolean",
            "description": "Bias for precision by applying an additional filter to results"
          },
          "include_additional_context": {
            "type": "boolean",
            "description": "Include additional context in the chart description including simple trend analysis"
          },
          "include_football_results": {
            "type": "boolean",
            "description": "include football results (while theyre not GA)"
          },
          "query": {
            "type": "string",
            "description": "Natural language search query string"
          }
        },
        "required": ["query"]
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL to the visualization"
          },
          "iframe": {
            "type": "string",
            "description": "HTML iframe to embed the visualization"
          },
          "chart_description": {
            "type": "string",
            "description": "Description of the chart"
          },
          "title": {
            "type": "string",
            "description": "Title of the chart"
          },
          "source_url": {
            "type": "string",
            "format": "uri",
            "description": "URL to the source of the data"
          },
          "specificity": {
            "type": "string",
            "description": "Integer between 0 and 100, where 0 is the least specific and 100 is the most specific"
          },
          "pub_id": {
            "type": "string",
            "description": "Unique identifier for the chart"
          },
          "fixed_height": {
            "type": "integer",
            "description": "Whether the chart has a fixed height"
          }
        },
        "required": [
          "chart_description",
          "iframe",
          "source_url",
          "title",
          "url"
        ]
      },
      "SuggestText": {
        "type": "object",
        "properties": {
          "collections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of collections to search (if empty, searches all collection)"
          },
          "aggregation_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AggregationTypeEnum"
              }
            ],
            "description": "Aggregation type (ie year-over-year, percentage-change-since-start, etc)\n\n* `monthly-totals` - monthly-totals\n* `month-over-month` - month-over-month\n* `percentage-change-since-start` - percentage-change-since-start\n* `cumulative-sum` - cumulative-sum\n* `3-month-trailing-average` - 3-month-trailing-average\n* `weekly-totals` - weekly-totals\n* `year-over-year` - year-over-year\n* `quarter-over-quarter` - quarter-over-quarter"
          },
          "start_time": {
            "type": "string",
            "format": "date",
            "description": "Start time for visualization result"
          },
          "end_time": {
            "type": "string",
            "format": "date",
            "description": "Start time for visualization result"
          },
          "fast_filter": {
            "type": "boolean",
            "description": "If the query can't be served, returns empty fast"
          },
          "specificity": {
            "type": "integer",
            "description": "Integer between 0 and 100, where 0 is the least specific and 100 is the most specific"
          },
          "save_preview_image": {
            "type": "boolean",
            "description": "Save preview image of chart"
          },
          "dark_mode": {
            "type": "boolean",
            "description": "Save preview image in dark mode"
          },
          "save_svg": {
            "type": "boolean",
            "description": "Save preview image as svg"
          },
          "include_rt_results": {
            "type": "boolean",
            "description": "Include real time results in the response"
          },
          "bias_for_precision": {
            "type": "boolean",
            "description": "Bias for precision by applying an additional filter to results"
          },
          "include_additional_context": {
            "type": "boolean",
            "description": "Include additional context in the chart description including simple trend analysis"
          },
          "include_football_results": {
            "type": "boolean",
            "description": "include football results (while theyre not GA)"
          },
          "text": {
            "type": "string",
            "description": "Text input for which we suggest charts",
            "maxLength": 10000
          },
          "num_suggestions": {
            "type": "integer",
            "default": 5,
            "description": "Number of suggestions to return"
          }
        },
        "required": ["text"]
      },
      "Theme": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "description": "Serialized JSON Theme"
          }
        },
        "required": ["theme"]
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionid"
      },
      "tokenAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Token-based authentication with required prefix \"Token\""
      }
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8000",
      "description": "Local Development server"
    },
    {
      "url": "https://trytako.com",
      "description": "Production server"
    }
  ]
}
